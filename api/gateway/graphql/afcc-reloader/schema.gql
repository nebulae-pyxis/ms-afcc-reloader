
type CommandResponse {
  "Response code"
  code: Int
  "Response message"
  message: String
}

type ReaderKeyResponse {
  code: Int
  key: [Int]
}

type RndaAuthCard {
  timestamp: BigInt
  samid: String
  data: String
}

type OperationConfigKey {
  key: String
  value: String
}

type ReadFlow {
  key: String
  instructionSet: [String]
}

type Mapping {
  key: String,
  value: [MappingInfo]
}

type MappingInfo {
  key: String,
  value: MappingData
}
type MappingData {
  block: Int
  initPos: Int
  endPos: Int
}

type MappingVersion {
    key: String
    block: Int
    byte: Int
}

type OperationConfig {
  system: String
  type: String
  mappingVersion: MappingVersion
  keys: [OperationConfigKey]
  readFlow: [ReadFlow]
  mapping: [Mapping]
  
}
input AfccReloadInput {
  "AFCC id"
  id: ID!
  "card Uiid"
  cardUiid: String
  "current balance"
  currentBalance: Float
  "Card mapping"
  cardMapping: String
  "amount to reload"
  amount: Float
}

type Mutation {
  "Reload an Afcc with the specified balance"
  reloadAfcc(input: AfccReloadInput): CommandResponse
}
type Query {
  getMasterKeyReloader: ReaderKeyResponse

  getRndAAuthCard(uid: String, postId: String, data: String, key: Int): RndaAuthCard

  getAuthConfirmation(samId: String, postId: String, data: String): RndaAuthCard

  getAfccOperationConfig(system: String, type: String): OperationConfig
}